import Foundation
import SwiftSyntax
import SwiftSyntaxBuilder

enum SourceWriter {
    static func write(licenses: [License], outputURL: URL) throws {
        let code = CodeBlockItemListSyntax {
            licensesDefinition()
            allLicensesDeclaration(licenses: licenses)
        }
        .formatted()
        .description

        let whole = """
        // Generated by LicenseCLI, see https://github.com/Ryu0118/LicenseCLI\n
        import Foundation\n
        \(code)
        """

        try whole.write(to: outputURL, atomically: true, encoding: .utf8)
    }

    private static func licensesDefinition() -> DeclSyntax {
        """
        public enum Licenses {
            public struct License: Equatable, Hashable, Identifiable {
                public let id: String
                public let license: String

                public init(id: String, license: String) {
                    self.id = id
                    self.license = license
                }
            }
        }
        """
    }

    private static func allLicensesDeclaration(licenses: [License]) -> DeclSyntax {
        let licensesCode = licenses
            .map {
                """
                Licenses.License(
                id: \"\($0.identity)\",
                license: \"\"\"
                        \($0.license)
                \"\"\"
                )
                """
            }
            .joined(separator: ",\n")
        return """
        public extension Licenses {
            static var all: [Licenses.License] {
                [
                    \(raw: licensesCode)
                ]
            }
        }
        """
    }
}
